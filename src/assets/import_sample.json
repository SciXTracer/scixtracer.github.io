{
    "import": "import scixtracer as sx\n\ndataset: sx.Dataset = sx.new_dataset(name='my dataset')\n\nsource_dir = Path('/my/source/dir')\nfor img_file in demo_source_dir.iterdir():\n    if img_file.is_file() and '.tif' in str(img_file):\n        img = imread(source_dir / img_file)\n        sx.new_data(dataset, img, \n                    loc_annotate={'type': 'train'})\n                    data_annotate={'name': img_file[:-4]}), \n                    metadata_annotate={'origin': source_dir / img_file})\n\n",
    "train": "import scixtracer as sx\n\ndataset = sx.get_dataset('my dataset')\ndataset_torch = sx.TorchDataset(dataset, # Dataset \n                               {'set': 'train'}, # query \n                               normalizer, # Callable for data normalization \n                               transform # Callable for data augmentation) \n\n\n\n\n\n\n",
    "run": "import scixtracer as sx\n\ndataset: sx.Dataset = sx.get_dataset(name='my dataset')\n\njob_decon = sx.Job(\n    func=wiener_filter,\n    inputs=[{'type': 'train'}, 2, 0.1], \n    outputs=[{'type': 'decon'}])\n\n sx.run(dataset, [job_decon])\n\n\n",
    "viz": "import scixtracer as sx\nimport matplotlib.pyplor as plt\n\ndataset: sx.Dataset = sx.get_dataset(name='my dataset')\n\ndata = sx.query_data(dataset, annotation={'type': 'train'}, info_only=False)\n\nplt.figure()\nplt.imwhow(data[0].value, cmap='gray')\nplt.show()\n\n\n"
}